nameOverride: ""
fullnameOverride: ""

# API key for the Connector configured in Formal Control Plane
formalAPIKey: ""

# Set to true if you're deploying outside AWS and use the ECR
# credentials job (ecr-cred Helm chart) to fetch ECR credentials
pullWithCredentials: false

image:
  repository: 654654333078.dkr.ecr.eu-west-1.amazonaws.com/formalco-prod-connector
  pullPolicy: Always
  tag: "latest"

# Define the ports of the connector depending on the listeners you've
# configured in Formal Control Plane
ports:
  # - name: postgres-listener
  #   port: 5432
  # - name: mongodb-listener
  #   port: 27017
  # - name: kubernetes-listener
  #   port: 443
  # - name: ssh-listener
  #   port: 22

replicaCount: 2
resources:
  requests:
    cpu: 4
    memory: 8Gi
  limits:
    cpu: 8
    memory: 16Gi

service:
  type: LoadBalancer

  # Set the service annotations according to your Kubernetes provider
  # and network topoligy
  annotations: {}
    # # Example annotations for AWS NLB
    # service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
    # service.beta.kubernetes.io/aws-load-balancer-type: nlb-ip
    # service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: HTTP
    # service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    # service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "8080"

  # Optional: restrict source IPs that can access the service
  loadBalancerSourceRanges: []
    # - 10.0.0.0/8
    # - 172.16.0.0/12
    # - 192.168.0.0/16

securityContext: {}
podSecurityContext: {}
podAnnotations:
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
volumes: []
volumeMounts: []
serviceAccount:
  name: ""

# Extra manifests to deploy as an array of objects
extraManifests: []
  # - apiVersion: v1
  #   kind: ConfigMap
  #   metadata:
  #     name: example-configmap
  #   data:
  #     key: value

# Additional containers to run in the same pod as the main connector container
sidecars: []
